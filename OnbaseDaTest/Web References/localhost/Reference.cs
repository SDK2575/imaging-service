//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OnBaseDaTest.localhost {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ImageServiceSoap", Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class ImageService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetKeywordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypesForGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypesForGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateKeywordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindDocumentsWithDocumentTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindDocumentsWithDocumentTypeGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypeNameByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentTypeIdByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersForGroupsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ImageService() {
            this.Url = "http://localhost/ImagingService/Service.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetKeywordsCompletedEventHandler GetKeywordsCompleted;
        
        /// <remarks/>
        public event GetDocumentTypesCompletedEventHandler GetDocumentTypesCompleted;
        
        /// <remarks/>
        public event GetDocumentTypesForGroupCompletedEventHandler GetDocumentTypesForGroupCompleted;
        
        /// <remarks/>
        public event GetDocumentTypesForGroupsCompletedEventHandler GetDocumentTypesForGroupsCompleted;
        
        /// <remarks/>
        public event GetDocumentGroupsCompletedEventHandler GetDocumentGroupsCompleted;
        
        /// <remarks/>
        public event GetDocumentDataCompletedEventHandler GetDocumentDataCompleted;
        
        /// <remarks/>
        public event UpdateKeywordsCompletedEventHandler UpdateKeywordsCompleted;
        
        /// <remarks/>
        public event UpdateDocumentCompletedEventHandler UpdateDocumentCompleted;
        
        /// <remarks/>
        public event InsertDocumentCompletedEventHandler InsertDocumentCompleted;
        
        /// <remarks/>
        public event DeleteDocumentCompletedEventHandler DeleteDocumentCompleted;
        
        /// <remarks/>
        public event FindDocumentsCompletedEventHandler FindDocumentsCompleted;
        
        /// <remarks/>
        public event FindDocumentsWithDocumentTypeCompletedEventHandler FindDocumentsWithDocumentTypeCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event FindDocumentsWithDocumentTypeGroupCompletedEventHandler FindDocumentsWithDocumentTypeGroupCompleted;
        
        /// <remarks/>
        public event GetDocumentTypeNameByIdCompletedEventHandler GetDocumentTypeNameByIdCompleted;
        
        /// <remarks/>
        public event GetDocumentTypeIdByNameCompletedEventHandler GetDocumentTypeIdByNameCompleted;
        
        /// <remarks/>
        public event GetUsersForGroupsCompletedEventHandler GetUsersForGroupsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/GetKeywords", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetKeywordsResponseGetKeywordsResult GetKeywords(long DocumentID) {
            object[] results = this.Invoke("GetKeywords", new object[] {
                        DocumentID});
            return ((GetKeywordsResponseGetKeywordsResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetKeywordsAsync(long DocumentID) {
            this.GetKeywordsAsync(DocumentID, null);
        }
        
        /// <remarks/>
        public void GetKeywordsAsync(long DocumentID, object userState) {
            if ((this.GetKeywordsOperationCompleted == null)) {
                this.GetKeywordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKeywordsOperationCompleted);
            }
            this.InvokeAsync("GetKeywords", new object[] {
                        DocumentID}, this.GetKeywordsOperationCompleted, userState);
        }
        
        private void OnGetKeywordsOperationCompleted(object arg) {
            if ((this.GetKeywordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKeywordsCompleted(this, new GetKeywordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/GetDocumentTypes", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("DocumentType", IsNullable=false)]
        public GetDocumentTypesResponseDocumentType[] GetDocumentTypes() {
            object[] results = this.Invoke("GetDocumentTypes", new object[0]);
            return ((GetDocumentTypesResponseDocumentType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypesAsync() {
            this.GetDocumentTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetDocumentTypesAsync(object userState) {
            if ((this.GetDocumentTypesOperationCompleted == null)) {
                this.GetDocumentTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypesOperationCompleted);
            }
            this.InvokeAsync("GetDocumentTypes", new object[0], this.GetDocumentTypesOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypesOperationCompleted(object arg) {
            if ((this.GetDocumentTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypesCompleted(this, new GetDocumentTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/GetDocumentTypesForGroup", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("DocumentType", IsNullable=false)]
        public GetDocumentTypesForGroupResponseDocumentType[] GetDocumentTypesForGroup(string PstrGroupName) {
            object[] results = this.Invoke("GetDocumentTypesForGroup", new object[] {
                        PstrGroupName});
            return ((GetDocumentTypesForGroupResponseDocumentType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypesForGroupAsync(string PstrGroupName) {
            this.GetDocumentTypesForGroupAsync(PstrGroupName, null);
        }
        
        /// <remarks/>
        public void GetDocumentTypesForGroupAsync(string PstrGroupName, object userState) {
            if ((this.GetDocumentTypesForGroupOperationCompleted == null)) {
                this.GetDocumentTypesForGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypesForGroupOperationCompleted);
            }
            this.InvokeAsync("GetDocumentTypesForGroup", new object[] {
                        PstrGroupName}, this.GetDocumentTypesForGroupOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypesForGroupOperationCompleted(object arg) {
            if ((this.GetDocumentTypesForGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypesForGroupCompleted(this, new GetDocumentTypesForGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/GetDocumentTypesForGroups", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("DocumentType", IsNullable=false)]
        public GetDocumentTypesForGroupsResponseDocumentType[] GetDocumentTypesForGroups(string[] PastrGroupNames) {
            object[] results = this.Invoke("GetDocumentTypesForGroups", new object[] {
                        PastrGroupNames});
            return ((GetDocumentTypesForGroupsResponseDocumentType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypesForGroupsAsync(string[] PastrGroupNames) {
            this.GetDocumentTypesForGroupsAsync(PastrGroupNames, null);
        }
        
        /// <remarks/>
        public void GetDocumentTypesForGroupsAsync(string[] PastrGroupNames, object userState) {
            if ((this.GetDocumentTypesForGroupsOperationCompleted == null)) {
                this.GetDocumentTypesForGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypesForGroupsOperationCompleted);
            }
            this.InvokeAsync("GetDocumentTypesForGroups", new object[] {
                        PastrGroupNames}, this.GetDocumentTypesForGroupsOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypesForGroupsOperationCompleted(object arg) {
            if ((this.GetDocumentTypesForGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypesForGroupsCompleted(this, new GetDocumentTypesForGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/GetDocumentGroups", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("DocumentType", IsNullable=false)]
        public GetDocumentGroupsResponseDocumentType[] GetDocumentGroups() {
            object[] results = this.Invoke("GetDocumentGroups", new object[0]);
            return ((GetDocumentGroupsResponseDocumentType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentGroupsAsync() {
            this.GetDocumentGroupsAsync(null);
        }
        
        /// <remarks/>
        public void GetDocumentGroupsAsync(object userState) {
            if ((this.GetDocumentGroupsOperationCompleted == null)) {
                this.GetDocumentGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentGroupsOperationCompleted);
            }
            this.InvokeAsync("GetDocumentGroups", new object[0], this.GetDocumentGroupsOperationCompleted, userState);
        }
        
        private void OnGetDocumentGroupsOperationCompleted(object arg) {
            if ((this.GetDocumentGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentGroupsCompleted(this, new GetDocumentGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/GetDocumentData", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetDocumentDataResponseGetDocumentDataResult GetDocumentData(long DocumentID) {
            object[] results = this.Invoke("GetDocumentData", new object[] {
                        DocumentID});
            return ((GetDocumentDataResponseGetDocumentDataResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentDataAsync(long DocumentID) {
            this.GetDocumentDataAsync(DocumentID, null);
        }
        
        /// <remarks/>
        public void GetDocumentDataAsync(long DocumentID, object userState) {
            if ((this.GetDocumentDataOperationCompleted == null)) {
                this.GetDocumentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentDataOperationCompleted);
            }
            this.InvokeAsync("GetDocumentData", new object[] {
                        DocumentID}, this.GetDocumentDataOperationCompleted, userState);
        }
        
        private void OnGetDocumentDataOperationCompleted(object arg) {
            if ((this.GetDocumentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentDataCompleted(this, new GetDocumentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/UpdateKeywords", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateKeywords(UpdateKeywordsDocument Document) {
            this.Invoke("UpdateKeywords", new object[] {
                        Document});
        }
        
        /// <remarks/>
        public void UpdateKeywordsAsync(UpdateKeywordsDocument Document) {
            this.UpdateKeywordsAsync(Document, null);
        }
        
        /// <remarks/>
        public void UpdateKeywordsAsync(UpdateKeywordsDocument Document, object userState) {
            if ((this.UpdateKeywordsOperationCompleted == null)) {
                this.UpdateKeywordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateKeywordsOperationCompleted);
            }
            this.InvokeAsync("UpdateKeywords", new object[] {
                        Document}, this.UpdateKeywordsOperationCompleted, userState);
        }
        
        private void OnUpdateKeywordsOperationCompleted(object arg) {
            if ((this.UpdateKeywordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateKeywordsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/UpdateDocument", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDocument(UpdateDocumentDocument Document) {
            this.Invoke("UpdateDocument", new object[] {
                        Document});
        }
        
        /// <remarks/>
        public void UpdateDocumentAsync(UpdateDocumentDocument Document) {
            this.UpdateDocumentAsync(Document, null);
        }
        
        /// <remarks/>
        public void UpdateDocumentAsync(UpdateDocumentDocument Document, object userState) {
            if ((this.UpdateDocumentOperationCompleted == null)) {
                this.UpdateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDocumentOperationCompleted);
            }
            this.InvokeAsync("UpdateDocument", new object[] {
                        Document}, this.UpdateDocumentOperationCompleted, userState);
        }
        
        private void OnUpdateDocumentOperationCompleted(object arg) {
            if ((this.UpdateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/InsertDocument", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long InsertDocument([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] FileBytes, InsertDocumentDocument Document) {
            object[] results = this.Invoke("InsertDocument", new object[] {
                        FileBytes,
                        Document});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDocumentAsync(byte[] FileBytes, InsertDocumentDocument Document) {
            this.InsertDocumentAsync(FileBytes, Document, null);
        }
        
        /// <remarks/>
        public void InsertDocumentAsync(byte[] FileBytes, InsertDocumentDocument Document, object userState) {
            if ((this.InsertDocumentOperationCompleted == null)) {
                this.InsertDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDocumentOperationCompleted);
            }
            this.InvokeAsync("InsertDocument", new object[] {
                        FileBytes,
                        Document}, this.InsertDocumentOperationCompleted, userState);
        }
        
        private void OnInsertDocumentOperationCompleted(object arg) {
            if ((this.InsertDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDocumentCompleted(this, new InsertDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/DeleteDocument", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteDocument(long DocumentID) {
            this.Invoke("DeleteDocument", new object[] {
                        DocumentID});
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(long DocumentID) {
            this.DeleteDocumentAsync(DocumentID, null);
        }
        
        /// <remarks/>
        public void DeleteDocumentAsync(long DocumentID, object userState) {
            if ((this.DeleteDocumentOperationCompleted == null)) {
                this.DeleteDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentOperationCompleted);
            }
            this.InvokeAsync("DeleteDocument", new object[] {
                        DocumentID}, this.DeleteDocumentOperationCompleted, userState);
        }
        
        private void OnDeleteDocumentOperationCompleted(object arg) {
            if ((this.DeleteDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/FindDocuments", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Document")]
        public ArrayOfDocumentDocument[] FindDocuments([System.Xml.Serialization.XmlElementAttribute("Keywords")] FindDocumentsKeywords[] Keywords) {
            object[] results = this.Invoke("FindDocuments", new object[] {
                        Keywords});
            return ((ArrayOfDocumentDocument[])(results[0]));
        }
        
        /// <remarks/>
        public void FindDocumentsAsync(FindDocumentsKeywords[] Keywords) {
            this.FindDocumentsAsync(Keywords, null);
        }
        
        /// <remarks/>
        public void FindDocumentsAsync(FindDocumentsKeywords[] Keywords, object userState) {
            if ((this.FindDocumentsOperationCompleted == null)) {
                this.FindDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindDocumentsOperationCompleted);
            }
            this.InvokeAsync("FindDocuments", new object[] {
                        Keywords}, this.FindDocumentsOperationCompleted, userState);
        }
        
        private void OnFindDocumentsOperationCompleted(object arg) {
            if ((this.FindDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindDocumentsCompleted(this, new FindDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/FindDocumentsWithDocumentType", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Document")]
        public ArrayOfDocumentDocument[] FindDocumentsWithDocumentType(string[] PastrDocumentTypes, [System.Xml.Serialization.XmlElementAttribute("Keywords")] FindDocumentsWithDocumentTypeKeywords[] Keywords) {
            object[] results = this.Invoke("FindDocumentsWithDocumentType", new object[] {
                        PastrDocumentTypes,
                        Keywords});
            return ((ArrayOfDocumentDocument[])(results[0]));
        }
        
        /// <remarks/>
        public void FindDocumentsWithDocumentTypeAsync(string[] PastrDocumentTypes, FindDocumentsWithDocumentTypeKeywords[] Keywords) {
            this.FindDocumentsWithDocumentTypeAsync(PastrDocumentTypes, Keywords, null);
        }
        
        /// <remarks/>
        public void FindDocumentsWithDocumentTypeAsync(string[] PastrDocumentTypes, FindDocumentsWithDocumentTypeKeywords[] Keywords, object userState) {
            if ((this.FindDocumentsWithDocumentTypeOperationCompleted == null)) {
                this.FindDocumentsWithDocumentTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindDocumentsWithDocumentTypeOperationCompleted);
            }
            this.InvokeAsync("FindDocumentsWithDocumentType", new object[] {
                        PastrDocumentTypes,
                        Keywords}, this.FindDocumentsWithDocumentTypeOperationCompleted, userState);
        }
        
        private void OnFindDocumentsWithDocumentTypeOperationCompleted(object arg) {
            if ((this.FindDocumentsWithDocumentTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindDocumentsWithDocumentTypeCompleted(this, new FindDocumentsWithDocumentTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/GetUsers", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUsers(int intGroupId) {
            object[] results = this.Invoke("GetUsers", new object[] {
                        intGroupId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync(int intGroupId) {
            this.GetUsersAsync(intGroupId, null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(int intGroupId, object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[] {
                        intGroupId}, this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/FindDocumentsWithDocumentTypeGroup", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("Document")]
        public ArrayOfDocumentDocument[] FindDocumentsWithDocumentTypeGroup(string[] PastrDocumentTypeGroups, [System.Xml.Serialization.XmlElementAttribute("Keywords")] FindDocumentsWithDocumentTypeGroupKeywords[] Keywords) {
            object[] results = this.Invoke("FindDocumentsWithDocumentTypeGroup", new object[] {
                        PastrDocumentTypeGroups,
                        Keywords});
            return ((ArrayOfDocumentDocument[])(results[0]));
        }
        
        /// <remarks/>
        public void FindDocumentsWithDocumentTypeGroupAsync(string[] PastrDocumentTypeGroups, FindDocumentsWithDocumentTypeGroupKeywords[] Keywords) {
            this.FindDocumentsWithDocumentTypeGroupAsync(PastrDocumentTypeGroups, Keywords, null);
        }
        
        /// <remarks/>
        public void FindDocumentsWithDocumentTypeGroupAsync(string[] PastrDocumentTypeGroups, FindDocumentsWithDocumentTypeGroupKeywords[] Keywords, object userState) {
            if ((this.FindDocumentsWithDocumentTypeGroupOperationCompleted == null)) {
                this.FindDocumentsWithDocumentTypeGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindDocumentsWithDocumentTypeGroupOperationCompleted);
            }
            this.InvokeAsync("FindDocumentsWithDocumentTypeGroup", new object[] {
                        PastrDocumentTypeGroups,
                        Keywords}, this.FindDocumentsWithDocumentTypeGroupOperationCompleted, userState);
        }
        
        private void OnFindDocumentsWithDocumentTypeGroupOperationCompleted(object arg) {
            if ((this.FindDocumentsWithDocumentTypeGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindDocumentsWithDocumentTypeGroupCompleted(this, new FindDocumentsWithDocumentTypeGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/GetDocumentTypeNameById", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetDocumentTypeNameByIdResponseGetDocumentTypeNameByIdResult GetDocumentTypeNameById(GetDocumentTypeNameByIdDocumentTypesDocumentType DocumentTypesDocumentType) {
            object[] results = this.Invoke("GetDocumentTypeNameById", new object[] {
                        DocumentTypesDocumentType});
            return ((GetDocumentTypeNameByIdResponseGetDocumentTypeNameByIdResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypeNameByIdAsync(GetDocumentTypeNameByIdDocumentTypesDocumentType DocumentTypesDocumentType) {
            this.GetDocumentTypeNameByIdAsync(DocumentTypesDocumentType, null);
        }
        
        /// <remarks/>
        public void GetDocumentTypeNameByIdAsync(GetDocumentTypeNameByIdDocumentTypesDocumentType DocumentTypesDocumentType, object userState) {
            if ((this.GetDocumentTypeNameByIdOperationCompleted == null)) {
                this.GetDocumentTypeNameByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypeNameByIdOperationCompleted);
            }
            this.InvokeAsync("GetDocumentTypeNameById", new object[] {
                        DocumentTypesDocumentType}, this.GetDocumentTypeNameByIdOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypeNameByIdOperationCompleted(object arg) {
            if ((this.GetDocumentTypeNameByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypeNameByIdCompleted(this, new GetDocumentTypeNameByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/GetDocumentTypeIdByName", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GetDocumentTypeIdByNameResponseGetDocumentTypeIdByNameResult GetDocumentTypeIdByName(GetDocumentTypeIdByNameDocumentTypesDocumentType DocumentTypesDocumentType) {
            object[] results = this.Invoke("GetDocumentTypeIdByName", new object[] {
                        DocumentTypesDocumentType});
            return ((GetDocumentTypeIdByNameResponseGetDocumentTypeIdByNameResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentTypeIdByNameAsync(GetDocumentTypeIdByNameDocumentTypesDocumentType DocumentTypesDocumentType) {
            this.GetDocumentTypeIdByNameAsync(DocumentTypesDocumentType, null);
        }
        
        /// <remarks/>
        public void GetDocumentTypeIdByNameAsync(GetDocumentTypeIdByNameDocumentTypesDocumentType DocumentTypesDocumentType, object userState) {
            if ((this.GetDocumentTypeIdByNameOperationCompleted == null)) {
                this.GetDocumentTypeIdByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypeIdByNameOperationCompleted);
            }
            this.InvokeAsync("GetDocumentTypeIdByName", new object[] {
                        DocumentTypesDocumentType}, this.GetDocumentTypeIdByNameOperationCompleted, userState);
        }
        
        private void OnGetDocumentTypeIdByNameOperationCompleted(object arg) {
            if ((this.GetDocumentTypeIdByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentTypeIdByNameCompleted(this, new GetDocumentTypeIdByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.njm.com/Imaging/1.0/ImagingServices/GetUsersForGroups", RequestNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", ResponseNamespace="http://ws.njm.com/Imaging/1.0/ImagingServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public User[] GetUsersForGroups(string PastrUserGroups) {
            object[] results = this.Invoke("GetUsersForGroups", new object[] {
                        PastrUserGroups});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersForGroupsAsync(string PastrUserGroups) {
            this.GetUsersForGroupsAsync(PastrUserGroups, null);
        }
        
        /// <remarks/>
        public void GetUsersForGroupsAsync(string PastrUserGroups, object userState) {
            if ((this.GetUsersForGroupsOperationCompleted == null)) {
                this.GetUsersForGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersForGroupsOperationCompleted);
            }
            this.InvokeAsync("GetUsersForGroups", new object[] {
                        PastrUserGroups}, this.GetUsersForGroupsOperationCompleted, userState);
        }
        
        private void OnGetUsersForGroupsOperationCompleted(object arg) {
            if ((this.GetUsersForGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersForGroupsCompleted(this, new GetUsersForGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class GetKeywordsResponseGetKeywordsResult {
        
        private ArrayOfDocumentKeywordKeyword[] keywordsField;
        
        private long documentTypeIDField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string typeField;
        
        private FileFormatType fileFormatField;
        
        private bool fileFormatFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Keyword", IsNullable=false)]
        public ArrayOfDocumentKeywordKeyword[] Keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentTypeID {
            get {
                return this.documentTypeIDField;
            }
            set {
                this.documentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FileFormatType FileFormat {
            get {
                return this.fileFormatField;
            }
            set {
                this.fileFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileFormatSpecified {
            get {
                return this.fileFormatFieldSpecified;
            }
            set {
                this.fileFormatFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class ArrayOfDocumentKeywordKeyword {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class User {
        
        private string idField;
        
        private string displayNameField;
        
        private string groupNameField;
        
        private int onbaseIdField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public int OnbaseId {
            get {
                return this.onbaseIdField;
            }
            set {
                this.onbaseIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public enum FileFormatType {
        
        /// <remarks/>
        TextReportFormat,
        
        /// <remarks/>
        ImageFileFormat,
        
        /// <remarks/>
        ExportTransferDocument,
        
        /// <remarks/>
        DataMiningFormat,
        
        /// <remarks/>
        PCLDataStream,
        
        /// <remarks/>
        EmtexAFPMetacode,
        
        /// <remarks/>
        MSWordDocument,
        
        /// <remarks/>
        MSExcelSpreadsheet,
        
        /// <remarks/>
        MSPowerPoint,
        
        /// <remarks/>
        RichTextFormat,
        
        /// <remarks/>
        PDF,
        
        /// <remarks/>
        HTML,
        
        /// <remarks/>
        AVIMovie,
        
        /// <remarks/>
        QuickTimeMovie,
        
        /// <remarks/>
        WAVAudioFile,
        
        /// <remarks/>
        PCLFilter,
        
        /// <remarks/>
        RedactedImage,
        
        /// <remarks/>
        HitHighlights,
        
        /// <remarks/>
        ElectronicForm,
        
        /// <remarks/>
        ApproveITElectronicSignature,
        
        /// <remarks/>
        VirtualElectronicForm,
        
        /// <remarks/>
        DynamicDocument,
        
        /// <remarks/>
        AFPDocument,
        
        /// <remarks/>
        PCLDictionaryImport,
        
        /// <remarks/>
        DJDE,
        
        /// <remarks/>
        XML,
        
        /// <remarks/>
        PCLFullsize,
        
        /// <remarks/>
        VerityHitHighlights,
        
        /// <remarks/>
        MSOutlookMessage,
        
        /// <remarks/>
        PCLSelfContained,
        
        /// <remarks/>
        PCLOriginalImplementation,
        
        /// <remarks/>
        PhysicalRecord,
        
        /// <remarks/>
        LotusNotesDocument,
        
        /// <remarks/>
        InternalXML,
        
        /// <remarks/>
        PendingVerity,
        
        /// <remarks/>
        HTMLUnicode,
        
        /// <remarks/>
        X1,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class GetDocumentTypesResponseDocumentType {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class GetDocumentTypesForGroupResponseDocumentType {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class GetDocumentTypesForGroupsResponseDocumentType {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class GetDocumentGroupsResponseDocumentType {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class GetDocumentDataResponseGetDocumentDataResult {
        
        private ArrayOfDocumentKeywordKeyword[] keywordsField;
        
        private long documentTypeIDField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string typeField;
        
        private FileFormatType fileFormatField;
        
        private bool fileFormatFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Keyword", IsNullable=false)]
        public ArrayOfDocumentKeywordKeyword[] Keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentTypeID {
            get {
                return this.documentTypeIDField;
            }
            set {
                this.documentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FileFormatType FileFormat {
            get {
                return this.fileFormatField;
            }
            set {
                this.fileFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileFormatSpecified {
            get {
                return this.fileFormatFieldSpecified;
            }
            set {
                this.fileFormatFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class UpdateKeywordsDocument {
        
        private ArrayOfDocumentKeywordKeyword[] keywordsField;
        
        private long documentTypeIDField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string typeField;
        
        private FileFormatType fileFormatField;
        
        private bool fileFormatFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Keyword", IsNullable=false)]
        public ArrayOfDocumentKeywordKeyword[] Keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentTypeID {
            get {
                return this.documentTypeIDField;
            }
            set {
                this.documentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FileFormatType FileFormat {
            get {
                return this.fileFormatField;
            }
            set {
                this.fileFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileFormatSpecified {
            get {
                return this.fileFormatFieldSpecified;
            }
            set {
                this.fileFormatFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class UpdateDocumentDocument {
        
        private ArrayOfDocumentKeywordKeyword[] keywordsField;
        
        private long documentTypeIDField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string typeField;
        
        private FileFormatType fileFormatField;
        
        private bool fileFormatFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Keyword", IsNullable=false)]
        public ArrayOfDocumentKeywordKeyword[] Keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentTypeID {
            get {
                return this.documentTypeIDField;
            }
            set {
                this.documentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FileFormatType FileFormat {
            get {
                return this.fileFormatField;
            }
            set {
                this.fileFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileFormatSpecified {
            get {
                return this.fileFormatFieldSpecified;
            }
            set {
                this.fileFormatFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class InsertDocumentDocument {
        
        private ArrayOfDocumentKeywordKeyword[] keywordsField;
        
        private long documentTypeIDField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string typeField;
        
        private FileFormatType fileFormatField;
        
        private bool fileFormatFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Keyword", IsNullable=false)]
        public ArrayOfDocumentKeywordKeyword[] Keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentTypeID {
            get {
                return this.documentTypeIDField;
            }
            set {
                this.documentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FileFormatType FileFormat {
            get {
                return this.fileFormatField;
            }
            set {
                this.fileFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileFormatSpecified {
            get {
                return this.fileFormatFieldSpecified;
            }
            set {
                this.fileFormatFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class FindDocumentsKeywords {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class ArrayOfDocumentDocument {
        
        private ArrayOfDocumentKeywordKeyword[] keywordsField;
        
        private long documentTypeIDField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string typeField;
        
        private FileFormatType fileFormatField;
        
        private bool fileFormatFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Keyword", IsNullable=false)]
        public ArrayOfDocumentKeywordKeyword[] Keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentTypeID {
            get {
                return this.documentTypeIDField;
            }
            set {
                this.documentTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public long ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FileFormatType FileFormat {
            get {
                return this.fileFormatField;
            }
            set {
                this.fileFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileFormatSpecified {
            get {
                return this.fileFormatFieldSpecified;
            }
            set {
                this.fileFormatFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class FindDocumentsWithDocumentTypeKeywords {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class FindDocumentsWithDocumentTypeGroupKeywords {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class GetDocumentTypeNameByIdDocumentTypesDocumentType {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class GetDocumentTypeNameByIdResponseGetDocumentTypeNameByIdResult {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class GetDocumentTypeIdByNameDocumentTypesDocumentType {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4161.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.njm.com/Imaging/1.0/ImagingServices")]
    public partial class GetDocumentTypeIdByNameResponseGetDocumentTypeIdByNameResult {
        
        private string idField;
        
        private string valueField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetKeywordsCompletedEventHandler(object sender, GetKeywordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKeywordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKeywordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetKeywordsResponseGetKeywordsResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetKeywordsResponseGetKeywordsResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetDocumentTypesCompletedEventHandler(object sender, GetDocumentTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentTypesResponseDocumentType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentTypesResponseDocumentType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetDocumentTypesForGroupCompletedEventHandler(object sender, GetDocumentTypesForGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypesForGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypesForGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentTypesForGroupResponseDocumentType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentTypesForGroupResponseDocumentType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetDocumentTypesForGroupsCompletedEventHandler(object sender, GetDocumentTypesForGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypesForGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypesForGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentTypesForGroupsResponseDocumentType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentTypesForGroupsResponseDocumentType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetDocumentGroupsCompletedEventHandler(object sender, GetDocumentGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentGroupsResponseDocumentType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentGroupsResponseDocumentType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetDocumentDataCompletedEventHandler(object sender, GetDocumentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentDataResponseGetDocumentDataResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentDataResponseGetDocumentDataResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateKeywordsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void UpdateDocumentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void InsertDocumentCompletedEventHandler(object sender, InsertDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void DeleteDocumentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FindDocumentsCompletedEventHandler(object sender, FindDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArrayOfDocumentDocument[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArrayOfDocumentDocument[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FindDocumentsWithDocumentTypeCompletedEventHandler(object sender, FindDocumentsWithDocumentTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindDocumentsWithDocumentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindDocumentsWithDocumentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArrayOfDocumentDocument[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArrayOfDocumentDocument[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void FindDocumentsWithDocumentTypeGroupCompletedEventHandler(object sender, FindDocumentsWithDocumentTypeGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindDocumentsWithDocumentTypeGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindDocumentsWithDocumentTypeGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArrayOfDocumentDocument[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArrayOfDocumentDocument[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetDocumentTypeNameByIdCompletedEventHandler(object sender, GetDocumentTypeNameByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypeNameByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypeNameByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentTypeNameByIdResponseGetDocumentTypeNameByIdResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentTypeNameByIdResponseGetDocumentTypeNameByIdResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetDocumentTypeIdByNameCompletedEventHandler(object sender, GetDocumentTypeIdByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentTypeIdByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentTypeIdByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GetDocumentTypeIdByNameResponseGetDocumentTypeIdByNameResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GetDocumentTypeIdByNameResponseGetDocumentTypeIdByNameResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    public delegate void GetUsersForGroupsCompletedEventHandler(object sender, GetUsersForGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4161.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersForGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersForGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591